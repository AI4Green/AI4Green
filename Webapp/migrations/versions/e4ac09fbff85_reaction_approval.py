"""reaction_approval

Revision ID: e4ac09fbff85
Revises: fd539899cb90
Create Date: 2025-05-07 12:14:35.302784

"""

import sqlalchemy as sa
from alembic import op

from migrations.utils import perform_migration

# revision identifiers, used by Alembic.
revision = "e4ac09fbff85"
down_revision = "fd539899cb90"
branch_labels = None
depends_on = None


def upgrade(engine_name: str):
    # test if the engine name is "default"
    if not perform_migration(engine_name):
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ReactionApprovalRequest",
        sa.Column("time_of_request", sa.DateTime(), nullable=False),
        sa.Column("time_of_review", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("requestor", sa.Integer(), nullable=False),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.Column("reaction", sa.Integer(), nullable=False),
        sa.Column("workbook", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.Column("institution", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "APPROVED",
                "REJECTED",
                "CHANGES_REQUESTED",
                name="reactionapprovalstatus",
            ),
            nullable=True,
        ),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["institution"], ["Institution.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["reaction"], ["Reaction.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["requestor"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["reviewed_by"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workbook"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ReactionApprovalRequest", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_institution"),
            ["institution"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_reaction"),
            ["reaction"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_requestor"),
            ["requestor"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_reviewed_by"),
            ["reviewed_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_workbook"),
            ["workbook"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ReactionApprovalRequest_workgroup"),
            ["workgroup"],
            unique=False,
        )

    op.create_table(
        "reaction_approval_request_approvers",
        sa.Column("reaction_approval_request_id", sa.Integer(), nullable=True),
        sa.Column("person_id", sa.Integer(), nullable=True),
        sa.Column("approved", sa.Boolean(), nullable=True),
        sa.Column("responded", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["Person.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reaction_approval_request_id"],
            ["ReactionApprovalRequest.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade(engine_name: str):
    if not perform_migration(engine_name):
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("reaction_approval_request_approvers")
    with op.batch_alter_table("ReactionApprovalRequest", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_workgroup"))
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_workbook"))
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_requestor"))
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_reaction"))
        batch_op.drop_index(batch_op.f("ix_ReactionApprovalRequest_institution"))

    op.drop_table("ReactionApprovalRequest")

    # Manually added this line to ensure ENUM is dropped as part of migration downgrade
    op.execute("DROP TYPE IF EXISTS reactionapprovalstatus")
    # ### end Alembic commands ###
