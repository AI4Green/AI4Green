"""data_export_request

Revision ID: 593edf90705f
Revises: 436a03e01053
Create Date: 2024-03-20 12:15:25.792030

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "593edf90705f"
down_revision = "436a03e01053"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "DataExportRequest",
        sa.Column("time_of_request", sa.DateTime(), nullable=False),
        sa.Column("time_of_release", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "data_format",
            sa.Enum("RDF", "PDF", "ELN", "SURF", "CSV", "SI", name="exportformat"),
            nullable=True,
        ),
        sa.Column("requestor", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "APPROVED", "REJECTED", "EXPIRED", name="approvalstatus"
            ),
            nullable=True,
        ),
        sa.Column("reactions", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.Column("institution", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["institution"], ["Institution.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["reactions"], ["Reaction.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["requestor"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("DataExportRequest", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_DataExportRequest_institution"),
            ["institution"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_DataExportRequest_requestor"), ["requestor"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_DataExportRequest_workgroup"), ["workgroup"], unique=False
        )

    op.create_table(
        "data_export_request_approvers",
        sa.Column("data_export_request_id", sa.Integer(), nullable=True),
        sa.Column("person_id", sa.Integer(), nullable=True),
        sa.Column("approved", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_export_request_id"],
            ["DataExportRequest.id"],
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["Person.id"],
        ),
    )
    op.create_table(
        "data_export_request_workbook_association",
        sa.Column("data_export_request_id", sa.Integer(), nullable=True),
        sa.Column("workbook_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_export_request_id"],
            ["DataExportRequest.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workbook_id"],
            ["WorkBook.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("data_export_request_workbook_association")
    op.drop_table("data_export_request_approvers")

    with op.batch_alter_table("DataExportRequest", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_DataExportRequest_workgroup"))
        batch_op.drop_index(batch_op.f("ix_DataExportRequest_requestor"))
        batch_op.drop_index(batch_op.f("ix_DataExportRequest_institution"))

    op.drop_table("DataExportRequest")
    op.execute("DROP TYPE IF EXISTS approvalstatus;")
    op.execute("DROP TYPE IF EXISTS exportformat;")

    # ### end Alembic commands ###
