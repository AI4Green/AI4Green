"""polymer
Revision ID: f5b3539b9a0e
Revises: 70fd97efd6c4
Create Date: 2024-11-21 16:07:24.975434
"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "f5b3539b9a0e"
down_revision = "70fd97efd6c4"
branch_labels = None
depends_on = None

reaction_type = sa.Enum("STANDARD", "POLYMER", name="reactiontype")


def upgrade(engine_name: str):
    # ### commands auto generated by Alembic - please adjust! ###

    # Create the new enum type
    reaction_type.create(op.get_bind(), checkfirst=False)

    op.create_table(
        "PolymerNovelCompound",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("smiles", sa.Text(), nullable=False),
        sa.Column("molec_weight", sa.Float(precision=53), nullable=True),
        sa.Column("molec_formula", sa.Text(), nullable=False),
        sa.Column("density", sa.Float(precision=53), nullable=True),
        sa.Column("concentration", sa.Float(precision=53), nullable=True),
        sa.Column("state", sa.Text(), nullable=True),
        sa.Column("form", sa.Text(), nullable=True),
        sa.Column("hphrase", sa.Text(), nullable=True),
        sa.Column("workbook", sa.Integer(), nullable=False),
        sa.Column("solvent", sa.Text(), nullable=True),
        sa.Column("time_of_creation", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["solvent"], ["Solvent.name"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["workbook"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "workbook"),
    )
    with op.batch_alter_table("PolymerNovelCompound", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_PolymerNovelCompound_solvent"), ["solvent"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_PolymerNovelCompound_workbook"), ["workbook"], unique=False
        )

    with op.batch_alter_table("Reaction", schema=None) as batch_op:
        batch_op.add_column(sa.Column("reaction_image", sa.Text(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "reaction_type",
                sa.Enum("STANDARD", "POLYMER", name="reactiontype"),
                server_default="STANDARD",
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("polymerisation_type", sa.Text(), nullable=True))
        batch_op.add_column(sa.Column("reaction_rxn", sa.Text(), nullable=True))

    # ### end Alembic commands ###


def downgrade(engine_name: str):
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("Reaction", schema=None) as batch_op:
        batch_op.drop_column("reaction_rxn")
        batch_op.drop_column("polymerisation_type")
        batch_op.drop_column("reaction_type")
        batch_op.drop_column("reaction_image")

    with op.batch_alter_table("PolymerNovelCompound", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_PolymerNovelCompound_workbook"))
        batch_op.drop_index(batch_op.f("ix_PolymerNovelCompound_solvent"))

    op.drop_table("PolymerNovelCompound")

    # Create the new enum type
    reaction_type.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###
