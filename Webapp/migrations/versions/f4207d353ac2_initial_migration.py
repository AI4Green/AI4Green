"""Initial migration

Revision ID: f4207d353ac2
Revises:
Create Date: 2023-09-22 16:52:39.106193

"""

import sqlalchemy as sa
from alembic import op

from migrations.utils import perform_migration

# revision identifiers, used by Alembic.
revision = "f4207d353ac2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name: str):
    # test if the engine name is "default"
    if not perform_migration(engine_name):
        print(f"Not performing migration {__file__}")
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Element",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("symbol", sa.Text(), nullable=False),
        sa.Column("remaining_supply", sa.Text(), nullable=False),
        sa.Column("colour", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "HazardCode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.Text(), nullable=False),
        sa.Column("phrase", sa.Text(), nullable=False),
        sa.Column("category", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Institution",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "NewsItem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Person",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("role_description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Solvent",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("flag", sa.Integer(), nullable=True),
        sa.Column("hazard", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "Compound",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cid", sa.Integer(), nullable=True),
        sa.Column("cas", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("smiles", sa.Text(), nullable=True),
        sa.Column("inchi", sa.Text(), nullable=True),
        sa.Column("inchikey", sa.Text(), nullable=True),
        sa.Column("molec_formula", sa.Text(), nullable=True),
        sa.Column("density", sa.Float(precision=53), nullable=True),
        sa.Column("concentration", sa.Float(precision=53), nullable=True),
        sa.Column("boiling_point", sa.Float(precision=53), nullable=True),
        sa.Column("melting_point", sa.Float(precision=53), nullable=True),
        sa.Column("flash_point", sa.Float(precision=53), nullable=True),
        sa.Column("autoignition_temp", sa.Float(precision=53), nullable=True),
        sa.Column("molec_weight", sa.Float(precision=53), nullable=True),
        sa.Column("state", sa.Text(), nullable=True),
        sa.Column("form", sa.Text(), nullable=True),
        sa.Column("hphrase", sa.Text(), nullable=True),
        sa.Column("safety_score", sa.Float(precision=53), nullable=True),
        sa.Column("health_score", sa.Float(precision=53), nullable=True),
        sa.Column("enviro_score", sa.Float(precision=53), nullable=True),
        sa.Column("econom_score", sa.Float(precision=53), nullable=True),
        sa.Column("solvent", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["solvent"], ["Solvent.name"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cas"),
        sa.UniqueConstraint("cid"),
    )
    with op.batch_alter_table("Compound", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Compound_solvent"), ["solvent"], unique=False
        )

    op.create_table(
        "Notification",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("type", sa.Text(), nullable=False),
        sa.Column("info", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.Column("wg", sa.Text(), nullable=False),
        sa.Column("wb", sa.Text(), nullable=False),
        sa.Column("wg_request", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("Notification", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Notification_person"), ["person"], unique=False
        )

    op.create_table(
        "User",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.Text(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("fullname", sa.Text(), nullable=False),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column("role", sa.Integer(), nullable=False),
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("hazard_colors", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["person"],
            ["Person.id"],
        ),
        sa.ForeignKeyConstraint(["role"], ["Role.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_User_person"), ["person"], unique=False)
        batch_op.create_index(batch_op.f("ix_User_role"), ["role"], unique=False)

    op.create_table(
        "WorkGroup",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("institution", sa.Integer(), nullable=False),
        sa.Column("approved", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["institution"], ["Institution.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "institution"),
    )
    with op.batch_alter_table("WorkGroup", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_WorkGroup_institution"), ["institution"], unique=False
        )

    op.create_table(
        "CompoundDataErrorReport",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("compound_name", sa.Text(), nullable=False),
        sa.Column("compound", sa.Integer(), nullable=False),
        sa.Column("error_type", sa.Text(), nullable=False),
        sa.Column("additional_info", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["compound"], ["Compound.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("CompoundDataErrorReport", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_CompoundDataErrorReport_compound"),
            ["compound"],
            unique=False,
        )

    op.create_table(
        "Person_WorkGroup",
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("person", "workgroup"),
    )
    with op.batch_alter_table("Person_WorkGroup", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Person_WorkGroup_workgroup"), ["workgroup"], unique=False
        )

    op.create_table(
        "Person_WorkGroup_2",
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("person", "workgroup"),
    )
    with op.batch_alter_table("Person_WorkGroup_2", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Person_WorkGroup_2_workgroup"), ["workgroup"], unique=False
        )

    op.create_table(
        "Person_WorkGroup_3",
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("person", "workgroup"),
    )
    with op.batch_alter_table("Person_WorkGroup_3", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Person_WorkGroup_3_workgroup"), ["workgroup"], unique=False
        )

    op.create_table(
        "WGStatusRequest",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("principal_investigator", sa.Integer(), nullable=False),
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("wg", sa.Integer(), nullable=False),
        sa.Column("current_role", sa.Text(), nullable=False),
        sa.Column("new_role", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("notification", sa.Integer(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification"], ["Notification.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["principal_investigator"], ["Person.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["wg"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("WGStatusRequest", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_WGStatusRequest_notification"),
            ["notification"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_WGStatusRequest_person"), ["person"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_WGStatusRequest_principal_investigator"),
            ["principal_investigator"],
            unique=False,
        )
        batch_op.create_index(batch_op.f("ix_WGStatusRequest_wg"), ["wg"], unique=False)

    op.create_table(
        "WorkBook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("abbreviation", sa.Text(), nullable=False),
        sa.Column("group", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["group"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "group"),
    )
    with op.batch_alter_table("WorkBook", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_WorkBook_group"), ["group"], unique=False)

    op.create_table(
        "WorkGroup_request",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("principal_investigator", sa.Integer(), nullable=False),
        sa.Column("info", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.Column("institution", sa.Integer(), nullable=False),
        sa.Column("workgroup", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["institution"], ["Institution.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["principal_investigator"], ["Person.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["workgroup"], ["WorkGroup.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "institution"),
    )
    with op.batch_alter_table("WorkGroup_request", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_WorkGroup_request_institution"),
            ["institution"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_WorkGroup_request_principal_investigator"),
            ["principal_investigator"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_WorkGroup_request_workgroup"), ["workgroup"], unique=False
        )

    op.create_table(
        "NovelCompound",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("cas", sa.Text(), nullable=True),
        sa.Column("smiles", sa.Text(), nullable=False),
        sa.Column("inchi", sa.Text(), nullable=True),
        sa.Column("inchikey", sa.Text(), nullable=True),
        sa.Column("molec_weight", sa.Float(precision=53), nullable=True),
        sa.Column("molec_formula", sa.Text(), nullable=False),
        sa.Column("density", sa.Float(precision=53), nullable=True),
        sa.Column("concentration", sa.Float(precision=53), nullable=True),
        sa.Column("boiling_point", sa.Float(precision=53), nullable=True),
        sa.Column("melting_point", sa.Float(precision=53), nullable=True),
        sa.Column("flash_point", sa.Float(precision=53), nullable=True),
        sa.Column("autoignition_temp", sa.Float(precision=53), nullable=True),
        sa.Column("state", sa.Text(), nullable=True),
        sa.Column("form", sa.Text(), nullable=True),
        sa.Column("hphrase", sa.Text(), nullable=True),
        sa.Column("safety_score", sa.Float(precision=53), nullable=True),
        sa.Column("health_score", sa.Float(precision=53), nullable=True),
        sa.Column("enviro_score", sa.Float(precision=53), nullable=True),
        sa.Column("econom_score", sa.Float(precision=53), nullable=True),
        sa.Column("workbook", sa.Integer(), nullable=False),
        sa.Column("solvent", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["solvent"], ["Solvent.name"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["workbook"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("inchi", "workbook"),
        sa.UniqueConstraint("name", "workbook"),
    )
    with op.batch_alter_table("NovelCompound", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_NovelCompound_solvent"), ["solvent"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_NovelCompound_workbook"), ["workbook"], unique=False
        )

    op.create_table(
        "Person_WorkBook",
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("workbook", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workbook"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("person", "workbook"),
    )
    with op.batch_alter_table("Person_WorkBook", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Person_WorkBook_workbook"), ["workbook"], unique=False
        )

    op.create_table(
        "Reaction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reaction_id", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("reaction_class", sa.Text(), nullable=False),
        sa.Column("creator", sa.Integer(), nullable=False),
        sa.Column("time_of_creation", sa.DateTime(), nullable=False),
        sa.Column("time_of_update", sa.DateTime(), nullable=True),
        sa.Column("date_reaction", sa.DateTime(), nullable=True),
        sa.Column("green_metric", sa.Float(precision=53), nullable=True),
        sa.Column("workbooks", sa.Integer(), nullable=False),
        sa.Column("reactants", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column("products", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column("reagents", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column("solvent", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column("reaction_table_data", sa.JSON(), nullable=False),
        sa.Column("summary_table_data", sa.JSON(), nullable=False),
        sa.Column("reaction_smiles", sa.Text(), nullable=False),
        sa.Column("complete", sa.Text(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["creator"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workbooks"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("workbooks", "name"),
        sa.UniqueConstraint("workbooks", "reaction_id"),
    )
    with op.batch_alter_table("Reaction", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Reaction_creator"), ["creator"], unique=False
        )

    op.create_table(
        "WBStatusRequest",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pi_sr", sa.Integer(), nullable=False),
        sa.Column("person", sa.Integer(), nullable=False),
        sa.Column("wb", sa.Integer(), nullable=False),
        sa.Column("current_role", sa.Text(), nullable=False),
        sa.Column("new_role", sa.Text(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("notification", sa.Integer(), nullable=False),
        sa.Column("status", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification"], ["Notification.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["person"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["pi_sr"], ["Person.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["wb"], ["WorkBook.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("WBStatusRequest", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_WBStatusRequest_notification"),
            ["notification"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_WBStatusRequest_person"), ["person"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_WBStatusRequest_pi_sr"), ["pi_sr"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_WBStatusRequest_wb"), ["wb"], unique=False)

    op.create_table(
        "Reaction_Reaction",
        sa.Column("reaction", sa.Integer(), nullable=False),
        sa.Column("reaction_2", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["reaction"], ["Reaction.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["reaction_2"], ["Reaction.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("reaction", "reaction_2"),
    )
    with op.batch_alter_table("Reaction_Reaction", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Reaction_Reaction_reaction_2"), ["reaction_2"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("Reaction_Reaction", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Reaction_Reaction_reaction_2"))

    op.drop_table("Reaction_Reaction")
    with op.batch_alter_table("WBStatusRequest", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WBStatusRequest_wb"))
        batch_op.drop_index(batch_op.f("ix_WBStatusRequest_pi_sr"))
        batch_op.drop_index(batch_op.f("ix_WBStatusRequest_person"))
        batch_op.drop_index(batch_op.f("ix_WBStatusRequest_notification"))

    op.drop_table("WBStatusRequest")
    with op.batch_alter_table("Reaction", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Reaction_creator"))

    op.drop_table("Reaction")
    with op.batch_alter_table("Person_WorkBook", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Person_WorkBook_workbook"))

    op.drop_table("Person_WorkBook")
    with op.batch_alter_table("NovelCompound", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_NovelCompound_workbook"))
        batch_op.drop_index(batch_op.f("ix_NovelCompound_solvent"))

    op.drop_table("NovelCompound")
    with op.batch_alter_table("WorkGroup_request", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WorkGroup_request_workgroup"))
        batch_op.drop_index(batch_op.f("ix_WorkGroup_request_principal_investigator"))
        batch_op.drop_index(batch_op.f("ix_WorkGroup_request_institution"))

    op.drop_table("WorkGroup_request")
    with op.batch_alter_table("WorkBook", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WorkBook_group"))

    op.drop_table("WorkBook")
    with op.batch_alter_table("WGStatusRequest", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WGStatusRequest_wg"))
        batch_op.drop_index(batch_op.f("ix_WGStatusRequest_principal_investigator"))
        batch_op.drop_index(batch_op.f("ix_WGStatusRequest_person"))
        batch_op.drop_index(batch_op.f("ix_WGStatusRequest_notification"))

    op.drop_table("WGStatusRequest")
    with op.batch_alter_table("Person_WorkGroup_3", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Person_WorkGroup_3_workgroup"))

    op.drop_table("Person_WorkGroup_3")
    with op.batch_alter_table("Person_WorkGroup_2", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Person_WorkGroup_2_workgroup"))

    op.drop_table("Person_WorkGroup_2")
    with op.batch_alter_table("Person_WorkGroup", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Person_WorkGroup_workgroup"))

    op.drop_table("Person_WorkGroup")
    with op.batch_alter_table("CompoundDataErrorReport", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_CompoundDataErrorReport_compound"))

    op.drop_table("CompoundDataErrorReport")
    with op.batch_alter_table("WorkGroup", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_WorkGroup_institution"))

    op.drop_table("WorkGroup")
    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_User_role"))
        batch_op.drop_index(batch_op.f("ix_User_person"))

    op.drop_table("User")
    with op.batch_alter_table("Notification", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Notification_person"))

    op.drop_table("Notification")
    with op.batch_alter_table("Compound", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Compound_solvent"))

    op.drop_table("Compound")
    op.drop_table("Solvent")
    op.drop_table("Role")
    op.drop_table("Person")
    op.drop_table("NewsItem")
    op.drop_table("Institution")
    op.drop_table("HazardCode")
    op.drop_table("Element")
    # ### end Alembic commands ###
